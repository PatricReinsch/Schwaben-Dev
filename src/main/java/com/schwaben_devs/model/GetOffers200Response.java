/*
 * Competitor API
 * Web-facing API for the challenge
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.schwaben_devs.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.micronaut.core.annotation.NonNull;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.annotation.Generated;

import java.util.List;
import java.util.Objects;

/**
 * GetOffers200Response
 */
@Serdeable
@JsonPropertyOrder({
    GetOffers200Response.JSON_PROPERTY_OFFERS,
    GetOffers200Response.JSON_PROPERTY_PRICE_RANGES,
    GetOffers200Response.JSON_PROPERTY_CAR_TYPE_COUNTS,
    GetOffers200Response.JSON_PROPERTY_SEATS_COUNT,
    GetOffers200Response.JSON_PROPERTY_FREE_KILOMETER_RANGE,
    GetOffers200Response.JSON_PROPERTY_VOLLKASKO_COUNT
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class GetOffers200Response {

    public static final String JSON_PROPERTY_OFFERS = "offers";
    public static final String JSON_PROPERTY_PRICE_RANGES = "priceRanges";
    public static final String JSON_PROPERTY_CAR_TYPE_COUNTS = "carTypeCounts";
    public static final String JSON_PROPERTY_SEATS_COUNT = "seatsCount";
    public static final String JSON_PROPERTY_FREE_KILOMETER_RANGE = "freeKilometerRange";
    public static final String JSON_PROPERTY_VOLLKASKO_COUNT = "vollkaskoCount";

    /**
     * All offers matching the query, with their IDs and additional data.
     */
    @NonNull
    @JsonProperty(JSON_PROPERTY_OFFERS)
    private List<SearchResultOffer> offers;

    /**
     * Buckets holding information of the number of offers within a specific price range. The results only includes buckets with at least one offer in that range sorted by start ascendingly. Bucket starts and ends are a multiple of the width.
     */
    @NonNull
    @JsonProperty(JSON_PROPERTY_PRICE_RANGES)
    private List<PriceRange> priceRanges;

    /**
     * The the number of offers with a specific car type.
     */
    @NonNull
    @JsonProperty(JSON_PROPERTY_CAR_TYPE_COUNTS)
    private CarTypeCount carTypeCounts;

    /**
     * Buckets holding information of the number of offers with a specific seat count. The results only includes entries with at least one offer with that seats count sorted by numberSeats ascendingly.
     */
    @NonNull
    @JsonProperty(JSON_PROPERTY_SEATS_COUNT)
    private List<SeatsCount> seatsCount;

    /**
     * Buckets holding information of the number of offers within a specific free kilometer range. The results only includes buckets with at least one offer in that range sorted by the start ascendingly. Bucket starts and ends are a multiple of the width.
     */
    @NonNull
    @JsonProperty(JSON_PROPERTY_FREE_KILOMETER_RANGE)
    private List<FreeKilometerRange> freeKilometerRange;

    @NonNull
    @JsonProperty(JSON_PROPERTY_VOLLKASKO_COUNT)
    private VollkaskoCount vollkaskoCount;

    public GetOffers200Response(List<SearchResultOffer> offers, List< PriceRange> priceRanges, CarTypeCount carTypeCounts, List< SeatsCount> seatsCount, List< FreeKilometerRange> freeKilometerRange, VollkaskoCount vollkaskoCount) {
        this.offers = offers;
        this.priceRanges = priceRanges;
        this.carTypeCounts = carTypeCounts;
        this.seatsCount = seatsCount;
        this.freeKilometerRange = freeKilometerRange;
        this.vollkaskoCount = vollkaskoCount;
    }

    /**
     * All offers matching the query, with their IDs and additional data.
     *
     * @return the offers property value
     */
    public List<SearchResultOffer> getOffers() {
        return offers;
    }

    /**
     * Set the offers property value
     *
     * @param offers property value to set
     */
    public void setOffers(List<SearchResultOffer> offers) {
        this.offers = offers;
    }

    /**
     * Set offers in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response offers(List< SearchResultOffer> offers) {
        this.offers = offers;
        return this;
    }
    /**
     * Add an item to the offers property in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response addoffersItem(SearchResultOffer offersItem) {
        offers.add(offersItem);
        return this;
    }

    /**
     * Buckets holding information of the number of offers within a specific price range. The results only includes buckets with at least one offer in that range sorted by start ascendingly. Bucket starts and ends are a multiple of the width.
     *
     * @return the priceRanges property value
     */
    public List< PriceRange> getPriceRanges() {
        return priceRanges;
    }

    /**
     * Set the priceRanges property value
     *
     * @param priceRanges property value to set
     */
    public void setPriceRanges(List< PriceRange> priceRanges) {
        this.priceRanges = priceRanges;
    }

    /**
     * Set priceRanges in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response priceRanges(List< PriceRange> priceRanges) {
        this.priceRanges = priceRanges;
        return this;
    }
    /**
     * Add an item to the priceRanges property in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response addpriceRangesItem(PriceRange priceRangesItem) {
        priceRanges.add(priceRangesItem);
        return this;
    }

    /**
     * The the number of offers with a specific car type.
     *
     * @return the carTypeCounts property value
     */
    public CarTypeCount getCarTypeCounts() {
        return carTypeCounts;
    }

    /**
     * Set the carTypeCounts property value
     *
     * @param carTypeCounts property value to set
     */
    public void setCarTypeCounts(CarTypeCount carTypeCounts) {
        this.carTypeCounts = carTypeCounts;
    }

    /**
     * Set carTypeCounts in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response carTypeCounts(CarTypeCount carTypeCounts) {
        this.carTypeCounts = carTypeCounts;
        return this;
    }

    /**
     * Buckets holding information of the number of offers with a specific seat count. The results only includes entries with at least one offer with that seats count sorted by numberSeats ascendingly.
     *
     * @return the seatsCount property value
     */
    public List< SeatsCount> getSeatsCount() {
        return seatsCount;
    }

    /**
     * Set the seatsCount property value
     *
     * @param seatsCount property value to set
     */
    public void setSeatsCount(List< SeatsCount> seatsCount) {
        this.seatsCount = seatsCount;
    }

    /**
     * Set seatsCount in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response seatsCount(List< SeatsCount> seatsCount) {
        this.seatsCount = seatsCount;
        return this;
    }
    /**
     * Add an item to the seatsCount property in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response addseatsCountItem(SeatsCount seatsCountItem) {
        seatsCount.add(seatsCountItem);
        return this;
    }

    /**
     * Buckets holding information of the number of offers within a specific free kilometer range. The results only includes buckets with at least one offer in that range sorted by the start ascendingly. Bucket starts and ends are a multiple of the width.
     *
     * @return the freeKilometerRange property value
     */
    public List< FreeKilometerRange> getFreeKilometerRange() {
        return freeKilometerRange;
    }

    /**
     * Set the freeKilometerRange property value
     *
     * @param freeKilometerRange property value to set
     */
    public void setFreeKilometerRange(List< FreeKilometerRange> freeKilometerRange) {
        this.freeKilometerRange = freeKilometerRange;
    }

    /**
     * Set freeKilometerRange in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response freeKilometerRange(List< FreeKilometerRange> freeKilometerRange) {
        this.freeKilometerRange = freeKilometerRange;
        return this;
    }
    /**
     * Add an item to the freeKilometerRange property in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response addfreeKilometerRangeItem(FreeKilometerRange freeKilometerRangeItem) {
        freeKilometerRange.add(freeKilometerRangeItem);
        return this;
    }

    /**
     * @return the vollkaskoCount property value
     */
    public VollkaskoCount getVollkaskoCount() {
        return vollkaskoCount;
    }

    /**
     * Set the vollkaskoCount property value
     *
     * @param vollkaskoCount property value to set
     */
    public void setVollkaskoCount(VollkaskoCount vollkaskoCount) {
        this.vollkaskoCount = vollkaskoCount;
    }

    /**
     * Set vollkaskoCount in a chainable fashion.
     *
     * @return The same instance of GetOffers200Response for chaining.
     */
    public GetOffers200Response vollkaskoCount(VollkaskoCount vollkaskoCount) {
        this.vollkaskoCount = vollkaskoCount;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOffers200Response getOffers200Response = (GetOffers200Response) o;
        return Objects.equals(offers, getOffers200Response.offers) &&
            Objects.equals(priceRanges, getOffers200Response.priceRanges) &&
            Objects.equals(carTypeCounts, getOffers200Response.carTypeCounts) &&
            Objects.equals(seatsCount, getOffers200Response.seatsCount) &&
            Objects.equals(freeKilometerRange, getOffers200Response.freeKilometerRange) &&
            Objects.equals(vollkaskoCount, getOffers200Response.vollkaskoCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(offers, priceRanges, carTypeCounts, seatsCount, freeKilometerRange, vollkaskoCount);
    }

    @Override
    public String toString() {
        return "GetOffers200Response("
            + "offers: " + getOffers() + ", "
            + "priceRanges: " + getPriceRanges() + ", "
            + "carTypeCounts: " + getCarTypeCounts() + ", "
            + "seatsCount: " + getSeatsCount() + ", "
            + "freeKilometerRange: " + getFreeKilometerRange() + ", "
            + "vollkaskoCount: " + getVollkaskoCount()
            + ")";
    }



}