/*
 * Competitor API
 * Web-facing API for the challenge
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.schwaben_devs.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.annotation.Generated;
import jakarta.annotation.Nonnull;

import java.util.Objects;

/**
 * SeatsCount
 */
@Serdeable
@JsonPropertyOrder({
    SeatsCount.JSON_PROPERTY_NUMBER_SEATS,
    SeatsCount.JSON_PROPERTY_COUNT
})
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class SeatsCount {

    public static final String JSON_PROPERTY_NUMBER_SEATS = "numberSeats";
    public static final String JSON_PROPERTY_COUNT = "count";

    /**
     * The number of seats the cars have
     */
    @JsonProperty(JSON_PROPERTY_NUMBER_SEATS)
    private Integer numberSeats;

    /**
     * The number of offers with the given number of seats
     */
    @Nonnull
    @JsonProperty(JSON_PROPERTY_COUNT)
    private Long count;

    public SeatsCount(Integer numberSeats, Long count) {
        this.numberSeats = numberSeats;
        this.count = count;
    }

    /**
     * The number of seats the cars have
     *
     * @return the numberSeats property value
     */
    public Integer getNumberSeats() {
        return numberSeats;
    }

    /**
     * Set the numberSeats property value
     *
     * @param numberSeats property value to set
     */
    public void setNumberSeats(Integer numberSeats) {
        this.numberSeats = numberSeats;
    }

    /**
     * Set numberSeats in a chainable fashion.
     *
     * @return The same instance of SeatsCount for chaining.
     */
    public SeatsCount numberSeats(Integer numberSeats) {
        this.numberSeats = numberSeats;
        return this;
    }

    /**
     * The number of offers with the given number of seats
     *
     * @return the count property value
     */
    public Long getCount() {
        return count;
    }

    /**
     * Set the count property value
     *
     * @param count property value to set
     */
    public void setCount(Long count) {
        this.count = count;
    }

    /**
     * Set count in a chainable fashion.
     *
     * @return The same instance of SeatsCount for chaining.
     */
    public SeatsCount count(Long count) {
        this.count = count;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SeatsCount seatsCount = (SeatsCount) o;
        return Objects.equals(numberSeats, seatsCount.numberSeats) &&
            Objects.equals(count, seatsCount.count);
    }

    @Override
    public int hashCode() {
        return Objects.hash(numberSeats, count);
    }

    @Override
    public String toString() {
        return "SeatsCount("
            + "numberSeats: " + getNumberSeats() + ", "
            + "count: " + getCount()
            + ")";
    }

}