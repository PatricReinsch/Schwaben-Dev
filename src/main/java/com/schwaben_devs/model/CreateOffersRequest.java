/*
 * Competitor API
 * Web-facing API for the challenge
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.schwaben_devs.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.serde.annotation.Serdeable;
import jakarta.annotation.Generated;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CreateOffersRequest
 */
@Serdeable
@JsonPropertyOrder(CreateOffersRequest.JSON_PROPERTY_OFFERS)
@Generated("io.micronaut.openapi.generator.JavaMicronautServerCodegen")
public class CreateOffersRequest {

    public static final String JSON_PROPERTY_OFFERS = "offers";

    @Nullable(inherited = true)
    @JsonProperty(JSON_PROPERTY_OFFERS)
    @JsonInclude(JsonInclude.Include.USE_DEFAULTS)
    private List< Offer> offers;

    /**
     * @return the offers property value
     */
    public List< Offer> getOffers() {
        return offers;
    }

    /**
     * Set the offers property value
     *
     * @param offers property value to set
     */
    public void setOffers(List< Offer> offers) {
        this.offers = offers;
    }

    /**
     * Set offers in a chainable fashion.
     *
     * @return The same instance of CreateOffersRequest for chaining.
     */
    public CreateOffersRequest offers(List< Offer> offers) {
        this.offers = offers;
        return this;
    }
    /**
     * Add an item to the offers property in a chainable fashion.
     *
     * @return The same instance of CreateOffersRequest for chaining.
     */
    public CreateOffersRequest addoffersItem(Offer offersItem) {
        if (offers == null) {
            offers = new ArrayList<>();
        }
        offers.add(offersItem);
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateOffersRequest createOffersRequest = (CreateOffersRequest) o;
        return Objects.equals(offers, createOffersRequest.offers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(offers);
    }

    @Override
    public String toString() {
        return "CreateOffersRequest("
            + "offers: " + getOffers()
            + ")";
    }

}